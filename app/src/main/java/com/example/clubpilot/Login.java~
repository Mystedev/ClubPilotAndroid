package com.example.clubpilot;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.app.AppCompatDelegate;
import androidx.core.graphics.Insets;
import androidx.core.os.LocaleListCompat;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.example.clubpilot.Fan.News;
import com.example.clubpilot.Fan.RegisterFan;
import com.example.clubpilot.PSP.EsdevenimentXML;
import com.example.clubpilot.PSP.NoticiaXML;
import com.example.clubpilot.Player.Dashboard;
import com.example.clubpilot.Player.PlayerData;

import java.sql.Connection;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class Login extends AppCompatActivity implements View.OnClickListener {
    Button buttonlogin,registerAsFan;
    TextView forgotPassword;
    //Button buttonforgotpassword;
    Spinner user;
    // Strings
    String tipusUsuari,player,fan,errorMessage;
    // DB
    Conection conn;
    Connection con;
    ResultSet rs;
    String str;

    EditText use, pass;

    @SuppressLint({"MissingInflatedId", "WrongViewCast"})
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        // ðŸ’¡ Configurar el idioma ANTES de cargar el layout
        SharedPreferences sharedPref = getSharedPreferences("config", MODE_PRIVATE);
        String savedLanguage = sharedPref.getString("idioma", "en");
        LocaleListCompat appLocale = LocaleListCompat.forLanguageTags(savedLanguage);
        AppCompatDelegate.setApplicationLocales(appLocale);
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_login);
        setSupportActionBar(findViewById(R.id.toolbar));
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });
        // Strings de la pantalla de login
        tipusUsuari = getResources().getString(R.string.tipo_usuari);
        player = getResources().getString(R.string.player);
        fan = getResources().getString(R.string.fan);
        errorMessage = getResources().getString(R.string.errorSelectUser);
        // Boto de login
        buttonlogin = findViewById(R.id.buttonLogin);
        buttonlogin.setOnClickListener(this);
        // Boto de recuperar contrasenya
        forgotPassword = findViewById(R.id.forgotPassowrd);
        forgotPassword.setOnClickListener(this);
        // Boto de registrar-se com a fan
        registerAsFan = findViewById(R.id.registerfan);
        registerAsFan.setOnClickListener(this);
        // Spinner per seleccionar el tipus d'usuari
        user = findViewById(R.id.spinner);
        // Afegir un itemSelectedListener en el Spinner per obtenir el tipus d'usuari seleccionat
        user.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> adapterView, View view, int position, long l) {
                String tipo_usuari = adapterView.getItemAtPosition(position).toString();
            }

            @Override
            public void onNothingSelected(AdapterView<?> adapterView) {
                Toast.makeText(Login.this, tipusUsuari, Toast.LENGTH_SHORT).show();
            }
        });

        // Llista d'opcions de jugadors
        ArrayList<String> items = new ArrayList<>();
        items.add(tipusUsuari);
        items.add(player);
        items.add(fan);
        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, items);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        user.setAdapter(adapter);

        use = findViewById(R.id.inputUser);
        pass = findViewById(R.id.inputPassword);


    }

    @Override
    public void onClick(View view) {
        if (view.getId() == R.id.buttonLogin){
            if(user.getSelectedItem().toString().equals(tipusUsuari)){
                Toast.makeText(this, errorMessage, Toast.LENGTH_SHORT).show();
            } else if (user.getSelectedItem().toString().equals(fan)){
                accesFan(); // Accedir com a fan
            } else if (user.getSelectedItem().toString().equals(player)){
                accesPlayer(); // Accedir com a jugador
            }
        }
        if (view.getId() == R.id.forgotPassowrd){
            Intent intent = new Intent(this, ForgotPassword.class);
            startActivity(intent);
        }
        if (view.getId() == R.id.registerfan){
            Intent intent = new Intent(this, RegisterFan.class);
            startActivity(intent);
        }
    }


    public void accesPlayer(){
        // Obtenir les dades del formulari (LOGIN)
        String username = use.getText().toString().trim();
        String password = pass.getText().toString().trim();
        // Comprovar que hagin dades
        if (username.isEmpty() || password.isEmpty()) {
            Toast.makeText(this, "Introdueix usuari i contrasenya", Toast.LENGTH_SHORT).show();
            return;
        }

        ExecutorService executor = Executors.newSingleThreadExecutor();
        executor.execute(() -> {
            boolean loginSuccess = UserDAO.loginUser(username, password);

            if (loginSuccess) {
                String userType = UserDAO.getUserType(username);
                if ("Jugador".equals(userType)) {
                    // 1. Obtener el ID del usuario
                    int userId = UserDAO.getUserId(username);

                    // 2. Obtener datos del jugador
                    PlayerData playerData = UserDAO.getDataPlayer(String.valueOf(userId));

                    // 3. Ir al Dashboard
                    runOnUiThread(() -> {
                        if (playerData != null) {
                            Intent intent = new Intent(this, Dashboard.class);
                            intent.putExtra("playerDisponibilitat", playerData.getDisponibilitat());
                            intent.putExtra("playerDorsal", playerData.getDorsal());
                            intent.putExtra("playerPosicio", playerData.getPosicio());
                            startActivity(intent);
                        } else {
                            Toast.makeText(this, "Error obtenint dades del jugador", Toast.LENGTH_SHORT).show();
                        }
                    });
                } else {
                    runOnUiThread(() ->
                            Toast.makeText(this, "Tipus d'usuari incorrecte", Toast.LENGTH_SHORT).show()
                    );
                }
            } else {
                runOnUiThread(() ->
                        Toast.makeText(this, "Usuari o contrasenya incorrectes", Toast.LENGTH_SHORT).show()
                );
            }
        });
    }

    public void accesFan(){
        // Obtenir les dades del formulari (LOGIN)
        String username = use.getText().toString().trim();
        String password = pass.getText().toString().trim();
        // Comprovar que hagin dades
        if (username.isEmpty() || password.isEmpty()) {
            Toast.makeText(this, "Introdueix usuari i contrasenya", Toast.LENGTH_SHORT).show();
            return;
        }

        ExecutorService executor = Executors.newSingleThreadExecutor();
        executor.execute(() -> {
            boolean loginSuccess = UserDAO.loginUser(username, password);

            runOnUiThread(() -> {
                if (loginSuccess) {
                    String userType = UserDAO.getUserType(username);
                    if(userType.equals("Unknown")){
                        Toast.makeText(this, "Aquest usuari no existeix", Toast.LENGTH_SHORT).show();
                    }
                    else if (userType.equals("Aficionado")) {
                        Intent intent = new Intent(this, News.class);
                        intent.putExtra("username", username);
                        startActivity(intent);
                    } else {
                        Toast.makeText(this, "Tipus d'usuari incorrecte", Toast.LENGTH_SHORT).show();
                    }
                }
            });
        });
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.idioma, menu);
        return super.onCreateOptionsMenu(menu);
    }

    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        String selectedLanguage;
        // Obtener el idioma seleccionado

        if (item.getItemId() == R.id.englishMenu) {
            selectedLanguage = "en";
        } else if (item.getItemId() == R.id.catalanMenu) {
            selectedLanguage = "ca";
        } else if (item.getItemId() == R.id.spanishMenu) {
            selectedLanguage = "es";
        } else {
            selectedLanguage = "en";
        }

        // Guardar en SharedPreferences
        SharedPreferences sharedPref = getSharedPreferences("config", MODE_PRIVATE);
        SharedPreferences.Editor editor = sharedPref.edit();
        editor.putString("idioma", selectedLanguage);
        editor.apply();

        // Camviar idioma
        LocaleListCompat appLocale = LocaleListCompat.forLanguageTags(selectedLanguage);
        AppCompatDelegate.setApplicationLocales(appLocale);

        recreate();
        return super.onOptionsItemSelected(item);
    }
}