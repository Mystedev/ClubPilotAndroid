package com.example.clubpilot.Player;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.LayoutAnimationController;
import android.widget.Switch;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.app.AppCompatDelegate;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.example.clubpilot.R;
import com.google.android.material.materialswitch.MaterialSwitch;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.List;

public class Dashboard extends AppCompatActivity {
    RecyclerView recyclerView;
    ArrayList<Event> listEvents;
    TextView welcome, dorsal, disponibilidad, posicion;
    Switch available;


    @SuppressLint({"MissingInflatedId", "SetTextI18n"})
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_dashboard);
        setSupportActionBar(findViewById(R.id.toolbar));
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
            return insets;
        });

        recyclerView = findViewById(R.id.listEvents);
        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        listEvents = new ArrayList<>();
        Adapter adapter = new Adapter(listEvents);

        // Animación de la lista
        Animation animation = AnimationUtils.loadAnimation(this, R.anim.fade_in);
        recyclerView.startAnimation(animation);
        LayoutAnimationController controller = AnimationUtils.loadLayoutAnimation(this, R.anim.layout_animation);
        recyclerView.setLayoutAnimation(controller);
        recyclerView.scheduleLayoutAnimation();
        recyclerView.setAdapter(adapter);

        welcome = findViewById(R.id.welcome);
        dorsal = findViewById(R.id.dorsal);
        disponibilidad = findViewById(R.id.available);
        posicion = findViewById(R.id.posicio);
        available = findViewById(R.id.available);

        // Recuperar datos desde Intent o SharedPreferences
        Intent intent = getIntent();
        SharedPreferences prefs = getSharedPreferences("user_data", MODE_PRIVATE);

        String name = intent.getStringExtra("username");
        String dorsalStr = intent.getStringExtra("playerDorsal");
        int disponibilidadInt = intent.getIntExtra("playerDisponibilitat", -1);
        String posicionStr = intent.getStringExtra("playerPosicio");

        // Si no vienen en el Intent, usar caché
        if (name == null) name = prefs.getString("username", "Jugador");
        if (dorsalStr == null) dorsalStr = prefs.getString("playerDorsal", "0");
        if (disponibilidadInt == -1) disponibilidadInt = prefs.getInt("playerDisponibilitat", 0);
        if (posicionStr == null) posicionStr = prefs.getString("playerPosicio", "Sin posición");

        // Guardar en caché
        SharedPreferences.Editor editor = prefs.edit();
        editor.putString("username", name);
        editor.putString("playerDorsal", dorsalStr);
        editor.putInt("playerDisponibilitat", disponibilidadInt);
        editor.putString("playerPosicio", posicionStr);
        editor.apply();

        // Mostrar los datos
        welcome.setText(getString(R.string.welcome) + " " + name);
        this.dorsal.setText(getString(R.string.dorsal) + " " + dorsalStr);
        this.available.setChecked(disponibilidadInt == 1);
        this.posicion.setText(posicionStr);

        // Recuperar eventos del intent o del archivo
        List<Event> receivedEvents = (List<Event>) intent.getSerializableExtra("listEvents");
        if (receivedEvents != null) {
            listEvents.clear();
            listEvents.addAll(receivedEvents);
            adapter.notifyDataSetChanged();
        }
        

    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        MenuInflater inflater = getMenuInflater();
        getMenuInflater().inflate(R.menu.player, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        if (item.getItemId() == R.id.config_player) {
            startActivity(new Intent(this, Player_Configuration.class));
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
}
