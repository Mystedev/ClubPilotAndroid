package com.example.clubpilot.Fan;

import android.content.Context;
import android.widget.Toast;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.example.clubpilot.R;
import com.example.clubpilot.UserDAO;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class NewsRecyclerAdapter extends RecyclerView.Adapter<NewsRecyclerAdapter.NewsViewHolder> {

    private final Context context;
    private final ArrayList<NewsData> newsList;
    private String currentUsername;           // P치sala desde la Activity
    private int currentUserId;
    private Set<Integer> followedClubSet;     // Para comprobar r치pido

    public NewsRecyclerAdapter(Context context, ArrayList<NewsData> newsList, String username) {
        this.context = context;
        this.newsList = newsList;
        this.currentUsername = username;
        this.currentUserId = UserDAO.getUserId(username);
        this.followedClubSet = new HashSet<>(UserDAO.getFollowedClubIds(currentUserId));
    }

    @NonNull
    @Override
    public NewsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(context).inflate(R.layout.list_item, parent, false);
        return new NewsViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull NewsViewHolder holder, int position) {
        NewsData item = newsList.get(position);
        holder.title.setText(item.getTitol());
        holder.author.setText(item.getAutor());
        holder.description.setText(item.getDescripcio());
        holder.date.setText(item.getData());

        // Usa un Executor para no bloquear el hilo principal
        ExecutorService executor = Executors.newSingleThreadExecutor();
        executor.execute(() -> {
            // Verifica si el club est치 siendo seguido en segundo plano
            boolean isFollowing = followedClubSet.contains(item.getClubId());

            // Ejecuta el c칩digo en el hilo principal para modificar la UI
            holder.itemView.post(() -> {
                holder.btnFollow.setText(isFollowing ? "Dejar de seguir" : "Seguir");

                holder.btnFollow.setOnClickListener(v -> {
                    executor.execute(() -> {
                        if (isFollowing) {
                            UserDAO.unfollowClub(currentUserId, item.getClubId());
                            followedClubSet.remove(item.getClubId());
                            holder.itemView.post(() -> {
                                holder.btnFollow.setText("Seguir");
                                Toast.makeText(context, "Has dejado de seguir a " + item.getClubName(), Toast.LENGTH_SHORT).show();
                            });
                        } else {
                            UserDAO.followClub(currentUserId, item.getClubId());
                            followedClubSet.add(item.getClubId());
                            holder.itemView.post(() -> {
                                holder.btnFollow.setText("Dejar de seguir");
                                Toast.makeText(context, "Ahora sigues a " + item.getClubName(), Toast.LENGTH_SHORT).show();
                            });
                        }
                    });
                });
            });
        });
    }

    @Override
    public int getItemCount() {
        return newsList.size();
    }

    public static class NewsViewHolder extends RecyclerView.ViewHolder {

        TextView title, author, description, date, btnFollow;

        public NewsViewHolder(@NonNull View itemView) {
            super(itemView);
            title = itemView.findViewById(R.id.title);
            author = itemView.findViewById(R.id.author);
            description = itemView.findViewById(R.id.description);
            date = itemView.findViewById(R.id.date);
            btnFollow = itemView.findViewById(R.id.btnFollow);
        }
    }
}
